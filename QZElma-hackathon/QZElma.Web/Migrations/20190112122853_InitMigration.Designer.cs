// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QZElma.Server.Models.Database.DBContexts;

namespace QZElma.Web.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20190112122853_InitMigration")]
    partial class InitMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("QZElma.Server.Models.Database.DBEntities.AnswerOption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("MultipleChoiceQuestionId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("MultipleChoiceQuestionId");

                    b.ToTable("AnswerOption");
                });

            modelBuilder.Entity("QZElma.Server.Models.Database.DBEntities.MultipleChoiceQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("QuizId");

                    b.Property<Guid>("RightAnswerId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.ToTable("MultipleChoiceQuestions");
                });

            modelBuilder.Entity("QZElma.Server.Models.Database.DBEntities.Quiz", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Quizzes");
                });

            modelBuilder.Entity("QZElma.Server.Models.Database.DBEntities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<Guid?>("QuizId");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("QZElma.Server.Models.Database.DBEntities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ChatId");

                    b.Property<string>("Name");

                    b.Property<Guid?>("RoomId");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("QZElma.Server.Models.Database.DBEntities.AnswerOption", b =>
                {
                    b.HasOne("QZElma.Server.Models.Database.DBEntities.MultipleChoiceQuestion")
                        .WithMany("Options")
                        .HasForeignKey("MultipleChoiceQuestionId");
                });

            modelBuilder.Entity("QZElma.Server.Models.Database.DBEntities.MultipleChoiceQuestion", b =>
                {
                    b.HasOne("QZElma.Server.Models.Database.DBEntities.Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("QuizId");
                });

            modelBuilder.Entity("QZElma.Server.Models.Database.DBEntities.Room", b =>
                {
                    b.HasOne("QZElma.Server.Models.Database.DBEntities.Quiz", "Quiz")
                        .WithMany()
                        .HasForeignKey("QuizId");
                });

            modelBuilder.Entity("QZElma.Server.Models.Database.DBEntities.User", b =>
                {
                    b.HasOne("QZElma.Server.Models.Database.DBEntities.Room")
                        .WithMany("Users")
                        .HasForeignKey("RoomId");
                });
#pragma warning restore 612, 618
        }
    }
}
